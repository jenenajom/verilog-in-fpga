module traffic_light_fsm(
    input clk,
    input rst,
    output reg [1:0] state // 0: RED, 1: YELLOW, 2: GREEN
);
    localparam RED = 2'd0, YELLOW = 2'd1, GREEN = 2'd2;
    // Timing (assuming 100 MHz clock):
    // 8 seconds = 800,000,000 cycles
    // 4 seconds = 400,000,000 cycles
    // 10 seconds = 1,000,000,000 cycles
    localparam [31:0] RED_TICKS    = 32'd800_000_000;
    localparam [31:0] YELLOW_TICKS = 32'd400_000_000;
    localparam [31:0] GREEN_TICKS  = 32'd1_000_000_000;
    reg [31:0] timer;
    always @(posedge clk or posedge rst) begin
        if (rst) begin
            state <= RED;
            timer <= 0;
        end else begin
            timer <= timer + 1;
            case(state)
                RED:    if (timer == RED_TICKS-1)    begin state <= YELLOW; timer <= 0; end
                YELLOW: if (timer == YELLOW_TICKS-1) begin state <= GREEN;  timer <= 0; end
                GREEN:  if (timer == GREEN_TICKS-1)  begin state <= RED;    timer <= 0; end
                default: state <= RED;
            endcase
        end
    end
endmodule
